{"version":3,"sources":["Components/Header.js","Components/Movie.js","Components/Search.js","Components/App.js","index.js"],"names":["Header","props","className","text","Movie","movie","poster","Poster","Title","width","alt","src","Year","Search","useState","searchValue","setSearchValue","value","onChange","e","target","type","onClick","preventDefault","search","App","loading","setLoading","movies","setMovies","errorMessage","setErrorMessage","useEffect","fetch","then","response","json","jsonResponse","Response","Error","map","index","key","ReactDOM","render","document","getElementById"],"mappings":"uJAUeA,G,KARA,SAACC,GACd,OACE,4BAAQC,UAAU,cAChB,4BAAKD,EAAME,SCoBFC,EAnBD,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACTC,EACa,QAAjBD,EAAME,OALR,qGAKuDF,EAAME,OAC7D,OACE,yBAAKL,UAAU,SACb,4BAAKG,EAAMG,OACX,6BACE,yBACEC,MAAM,MACNC,IAAG,4BAAuBL,EAAMG,OAChCG,IAAKL,KAGT,+BAAKD,EAAMO,KAAX,OCaSC,EA7BA,SAACZ,GAAW,IAAD,EACca,mBAAS,IADvB,mBACjBC,EADiB,KACJC,EADI,KAiBxB,OACI,0BAAMd,UAAU,UACd,2BACEe,MAAOF,EACPG,SAlByB,SAACC,GAChCH,EAAeG,EAAEC,OAAOH,QAkBlBI,KAAK,SAEP,2BAAOC,QAbc,SAACH,GAC1BA,EAAEI,iBACFtB,EAAMuB,OAAOT,IAW2BM,KAAK,SAASJ,MAAM,aCsCjDQ,EAtDH,WAAO,IAAD,EACcX,oBAAS,GADvB,mBACTY,EADS,KACAC,EADA,OAEYb,mBAAS,IAFrB,mBAETc,EAFS,KAEDC,EAFC,OAGwBf,mBAAS,MAHjC,mBAGTgB,EAHS,KAGKC,EAHL,KAKdC,qBAAU,WACVC,MAVmB,iEAWhBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJR,EAAUQ,EAAaxB,QACvBc,GAAW,QAEd,IAqBD,OACC,yBAAKzB,UAAU,OACd,kBAAC,EAAD,CAAQC,KAAK,oBACb,kBAAC,EAAD,CAAQqB,OAtBK,SAAAT,GACfY,GAAW,GACXI,EAAgB,MAEhBE,MAAM,yDAAD,OAA0DlB,IAC5DmB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAC0B,SAA1BA,EAAaC,UACfT,EAAUQ,EAAaxB,QAEvBc,GAAW,KAEXI,EAAgBM,EAAaE,OAC7BZ,GAAW,UAUf,uBAAGzB,UAAU,aAAb,yCACA,yBAAKA,UAAU,UACZwB,IAAYI,EACZ,4CACIA,EACH,yBAAK5B,UAAU,gBAAgB4B,GAE/BF,EAAOY,KAAI,SAACnC,EAAOoC,GAAR,OACT,kBAAC,EAAD,CAAOC,IAAG,UAAKD,EAAL,YAAcpC,EAAMG,OAASH,MAAOA,UCnD1DsC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.f4a9a887.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Header = (props) => {\n  return (\n    <header className=\"App-header\">\n      <h2>{props.text}</h2>\n    </header>\n  );\n};\n\nexport default Header;","import React from \"react\";\n\nconst DEFAULT_PLACEHOLDER_IMAGE =\n  \"https://m.media-amazon.com/images/M/MV5BMTczNTI2ODUwOF5BMl5BanBnXkFtZTcwMTU0NTIzMw@@._V1_SX300.jpg\";\n\n\nconst Movie = ({ movie }) => {\n  const poster =\n    movie.Poster === \"N/A\" ? DEFAULT_PLACEHOLDER_IMAGE : movie.Poster;\n  return (\n    <div className=\"movie\">\n      <h2>{movie.Title}</h2>\n      <div>\n        <img\n          width=\"200\"\n          alt={`The movie titled: ${movie.Title}`}\n          src={poster}\n        />\n      </div>\n      <p>({movie.Year})</p>\n    </div>\n  );\n};\n\n\nexport default Movie;","import React, { useState } from \"react\";\n\n\nconst Search = (props) => {\n  const [searchValue, setSearchValue] = useState(\"\");\n  \n  const handleSearchInputChanges = (e) => {\n    setSearchValue(e.target.value);\n  }\n\n  const resetInputField = () => {\n    setSearchValue(\"\")\n  }\n\n  const callSearchFunction = (e) => {\n    e.preventDefault();\n    props.search(searchValue);\n    // resetInputField();\n  }\n\n  return (\n      <form className=\"search\">\n        <input\n          value={searchValue}\n          onChange={handleSearchInputChanges}\n          type=\"text\"\n        />\n        <input onClick={callSearchFunction} type=\"submit\" value=\"SEARCH\" />\n      </form>\n    );\n}\n\nexport default Search;","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Header from \"./Header\";\nimport Movie from \"./Movie\";\nimport Search from \"./Search\";\n\n\nconst MOVIE_API_URL =  'https://www.omdbapi.com/?type=movie&apikey=a1b5f9ec&s=ironman';\n //\"https://www.omdbapi.com/?s=man&apikey=4a3b711b\";\n\n\nconst App = () => {\n  const [loading, setLoading] = useState(true);\n  const [movies, setMovies] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n    useEffect(() => {\n    fetch(MOVIE_API_URL)\n      .then(response => response.json())\n      .then(jsonResponse => {\n        setMovies(jsonResponse.Search);\n        setLoading(false);\n      });\n  }, []);\n\n    const search = searchValue => {\n    setLoading(true);\n    setErrorMessage(null);\n\n    fetch(`https://www.omdbapi.com/?type=movie&apikey=a1b5f9ec&s=${searchValue}`)\n      .then(response => response.json())\n      .then(jsonResponse => {\n        if (jsonResponse.Response === \"True\") {\n          setMovies(jsonResponse.Search);\n          //  console.log(jsonResponse);\n          setLoading(false);\n        } else {\n          setErrorMessage(jsonResponse.Error);\n          setLoading(false);\n        }\n      });\n  \t};\n\n    \n    return (\n     <div className=\"App\">\n      <Header text=\"Movie Searching\" />\n      <Search search={search} />\n      <p className=\"App-intro\">Sharing a few of our favourite movies</p>\n      <div className=\"movies\">\n        {loading && !errorMessage ? (\n         <span>loading...</span>\n         ) : errorMessage ? (\n          <div className=\"errorMessage\">{errorMessage}</div>\n        ) : (\n          movies.map((movie, index) => (\n            <Movie key={`${index}-${movie.Title}`} movie={movie} />\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n\n\nexport default App;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './Components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}